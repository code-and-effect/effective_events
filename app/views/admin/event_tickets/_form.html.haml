= effective_form_with(model: [:admin, event_ticket], engine: true) do |f|
  = f.hidden_field :event_id

  = card(et(Effective::EventTicket)) do
    = f.text_field :title

    .row
      .col
        = f.select :category, Effective::EventTicket::CATEGORIES, label: 'Purchasable by', hint: "Determines who can purchase this ticket."

        = f.price_field :early_bird_price, 
          hint: 'The price charged when registering before the early bird date. This price will be charged instead of any of the prices below. Leave blank for no early bird price.',
          disabled: !f.object.event&.early_bird_end_at.present?

        = f.show_if(:category, 'Anyone') do
          = f.price_field :non_member_price, label: 'Non-member price', hint: 'The price charged when registering a non-member.'
          = f.price_field :member_price, hint: 'The price charged when registering a member.'

        = f.show_if(:category, 'Members') do
          = f.price_field :member_price, hint: 'The price charged when registering a member.'

        = f.check_box :guest_of_member, label: 'Allow members to purchase a guest ticket'

        = f.show_if(:guest_of_member, true) do
          = f.price_field :guest_of_member_price, hint: 'The price charged to members when registering a non-member guest.'

        - if EffectiveOrders.use_item_names?
          = qb_item_name_field(f)

        = f.check_box :tax_exempt, label: "This #{etd(f.object)} is tax exempt"

      .col
        = f.number_field :capacity, hint: "The number of registrations will be limited to capacity. Leave blank for unlimited capacity."
        = f.check_box :display_capacity, label: "Display the remaining ticket capacity to users during registration", hint: "Leave blank to hide the capacity."

        - if EffectiveEvents.delayed?
          - event_delayed = f.object.event&.delayed?
          - f.object.waitlist = false if !event_delayed

          = f.check_box :waitlist, 
            label: "Add to waitlist once capacity is reached",
            hint: "Once capacity is reached, new registrations will be added to the waitlist. Payment information is collected but not charged for waitlisted registrants. To waitlist everyone and promote later, set the capacity to zero. Requires an event with delayed payment.",
            disabled: !event_delayed

        = f.check_box :archived, label: 'Archive this ticket', hint: "While archived, it cannot be purchased by users but registrants can still be added by an admin."

  = card('Questions') do
    %p
      %small.text-muted Please add up to 3 questions to ask during registration. Each ticket will have their own unique answers. Leave a question blank to skip.

    = f.text_field :question1, label: 'Question 1'
    = f.check_box :question1_required, label: 'Question 1 Required'

    = f.text_field :question2, label: 'Question 2'
    = f.check_box :question2_required, label: 'Question 2 Required'

    = f.text_field :question3, label: 'Question 3'
    = f.check_box :question3_required, label: 'Question 3 Required'

  = effective_submit(f)
