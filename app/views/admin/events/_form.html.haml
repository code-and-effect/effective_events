= tabs do
  = tab "Event" do
    = render 'admin/events/form_event', event: event

  - if event.persisted?
    = tab 'Content' do
      = render '/admin/events/form_content', event: event

  - if event.persisted? && !event.external_registration?
    = tab 'Tickets' do
      %h2 Tickets
      - datatable = Admin::EffectiveEventTicketsDatatable.new(event_id: event.id)
      = render_inline_datatable(datatable)

    = tab 'Products' do
      %h2 Products
      - datatable = Admin::EffectiveEventProductsDatatable.new(event_id: event.id)
      = render_inline_datatable(datatable)

    = tab 'Email' do
      %p Click New to add one or more emails.

      - datatable = Admin::EffectiveEventNotificationsDatatable.new(event_id: event.id)
      = render_datatable(datatable, inline: true, simple: true)

    = tab 'Registrations' do
      %h2 Registrations
      - datatable = Admin::EffectiveEventRegistrationsDatatable.new(event_id: event.id)
      .mb-4= render_inline_datatable(datatable)

    = tab 'Registrants' do
      %h2 Registrants
      - datatable = Admin::EffectiveEventRegistrantsDatatable.new(event_id: event.id)
      .mb-4= render_inline_datatable(datatable)

    = tab 'Add-ons' do
      %h2 Add-ons
      - datatable = Admin::EffectiveEventAddonsDatatable.new(event_id: event.id)
      .mb-4= render_inline_datatable(datatable)

    = tab 'Wizard' do
      = render '/admin/events/form_event_registration_content', event: event

  - if event.persisted?
    = tab 'Access' do
      = render '/admin/events/form_access', event: event

    - if event.respond_to?(:log_changes_datatable)
      = tab "Logs" do
        = render_inline_datatable(event.log_changes_datatable)

  - if event.persisted? && event.class.respond_to?(:acts_as_tagged?)
    = tab "Tags" do
      = render '/admin/events/form_tags', event: event
