= tabs do
  = tab "Event" do
    = render 'admin/events/form_event', event: event

  - if event.persisted?
    = tab 'Content' do
      = render '/admin/events/form_content', event: event

  - if event.persisted? && !event.external_registration?
    = tab 'Tickets & Products' do
      %h2 Tickets
      - datatable = Admin::EffectiveEventTicketsDatatable.new(event_id: event.id)
      = render_inline_datatable(datatable)

      %h2 Products
      - datatable = Admin::EffectiveEventProductsDatatable.new(event_id: event.id)
      = render_inline_datatable(datatable)

    = tab 'Registrants & Addons' do
      %h2 Registrants
      .mb-4
        %small.text-muted Please refresh the page after archiving/unarchiving here to display an accurate Registered count on the Tickets & Products tab

      - datatable = EffectiveResources.best('Admin::EffectiveEventRegistrantsDatatable').new(event_id: event.id)
      .mb-4= render_inline_datatable(datatable)

      %h2 Add-ons
      - datatable = EffectiveResources.best('Admin::EffectiveEventAddonsDatatable').new(event_id: event.id)
      .mb-4= render_inline_datatable(datatable)

    = tab 'Wizard' do
      = render '/admin/events/form_event_registration_content', event: event

    -# = tab 'Email' do
    -#   %p Click New to add one or more emails.

    -#   - datatable = Admin::EffectiveEventNotificationsDatatable.new(event_id: event.id)
    -#   = render_datatable(datatable, inline: true, simple: true)

    = tab 'Access' do
      = render '/admin/events/form_access', event: event

  - if event.persisted?
    - if event.respond_to?(:logs_datatable)
      = tab "Logs" do
        = render_inline_datatable(event.logs_datatable)
