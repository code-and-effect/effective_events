.event-registrant-user-fields
  - user_klass = (f.object.user || current_user).class
  - ajax_url = (effective_events.users_event_registrants_select2_ajax_index_path unless Rails.env.test?)
  - disabled = (f.object.user.present? && f.object.user.persisted? && f.object.user.errors.blank?)

  = f.hidden_field :user_type, value: user_klass.name

  = f.select :user_id, user_klass.all, ajax_url: ajax_url, label: "Quick add", placeholder: "Search by name, email, or company",
    hint: "Can't find someone? Add their details below.", input_js: { minimumInputLength: 1 }, 'data-event-registrant-user-search': true

  .row
    .col-md= f.text_field :first_name, input_html: { disabled: disabled }
    .col-md= f.text_field :last_name, input_html: { disabled: disabled }

  .row
    .col-md= f.email_field :email, input_html: { disabled: disabled }
    .col-md
      - if EffectiveEvents.organization_enabled? == false
        = f.text_field :company, input_html: { disabled: disabled }
      
      - if EffectiveEvents.organization_enabled?
        - organizations = EffectiveMemberships.Organization.sorted.all

        - # These are populated by the user selected javascript
        = f.hidden_field :organization_type, value: EffectiveMemberships.Organization.name
        = f.hidden_field :organization_id

        - if f.object.event_ticket&.member_only?
          - organization_id = (f.object.event_registration&.owner || current_user).try(:organizations).try(:first).try(:id)

          = f.select :organization_id, organizations, label: organization_label, placeholder: 'Search by name', input_html: { disabled: disabled },
            input_js: { minimumInputLength: 1 },
            hint: "You can only add new members to your own #{organization_label.downcase}",
            value: (organization_id if organization_id && f.object.organization_id.blank?)
        - else
          - # This creates a select field organization_id and a text field company
          = f.select_or_text :organization_id, :company, organizations, name: organization_label.downcase, input_html: { disabled: disabled },
            text: { label: "#{organization_label} name", placeholder: "New #{organization_label.downcase} name" },
            select: { label: organization_label, placeholder: 'Search by name', input_js: { minimumInputLength: 1 } }
