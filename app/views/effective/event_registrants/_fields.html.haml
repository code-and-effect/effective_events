.card.mb-4
  .card-body
    - if f.object.purchased?
      = f.static_field :event_ticket, label: 'Purchased ticket'
    - else
      = f.select :event_ticket_id, effective_events_event_tickets_collection(event, namespace), label: 'Ticket'

    - if f.object.purchased? && namespace == :admin
      = f.select :event_ticket_id, effective_events_event_tickets_collection(event, namespace), label: 'Change Ticket', hint: 'Admin only. Change the purchased ticket. This will not create charges, alter the original order, or consider ticket capacity.'

    - event.event_tickets.each do |ticket|
      - next if ticket.member_only? && !current_user&.is?(:member)

      = f.show_if(:event_ticket_id, ticket.id) do
        - if event.allow_blank_registrants? && (f.object.new_record? || f.object.blank_registrant?)
          = f.check_box :blank_registrant, label: "I will return and add this ticket's information later"
        - else
          = f.hidden_field :blank_registrant, value: false

        = f.show_if(:blank_registrant, false, nested: true) do
          %hr

          - if ticket.regular?
            = render('effective/event_registrants/fields_regular', f: f)
          - elsif ticket.member_only?
            = render('effective/event_registrants/fields_member_only', f: f)
          - elsif ticket.member_or_non_member?
            = render('effective/event_registrants/fields_member_or_non_member', f: f)
          - else
            - raise("Unexpected ticket category: #{ticket.category || 'nil'}")

          = render('effective/event_registrants/fields_questions', f: f, ticket: ticket)

